

import cv2
import numpy as np

cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    
    # Konversi frame ke mode HSV
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    # Set nilai threshold warna merah
    lower_red = np.array([0,100,100])
    upper_red = np.array([10,255,255])
    mask1 = cv2.inRange(hsv, lower_red, upper_red)

    lower_red = np.array([170,100,100])
    upper_red = np.array([180,255,255])
    mask2 = cv2.inRange(hsv, lower_red, upper_red)
    
    lower_green = np.array([50, 100, 100])
    upper_green = np.array([70, 255, 255])
    mask3 = cv2.inRange(hsv, lower_green, upper_green)

    # Gabungan mask1, mask2 untuk warna merah
    mask = cv2.bitwise_or(mask1, mask2)

    # Aplikasi mask ke frame
    red_frame = cv2.bitwise_and(frame, frame, mask=mask)
    green_frame = cv2.bitwise_and(frame, frame, mask=mask3)
    
    
    # Cari contours
    contours, hierarchy = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    contours1, hierarchy1 = cv2.findContours(mask3, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    # Gambar area warna
    for contour in contours:
        area = cv2.contourArea(contour)
        perimeter = cv2.arcLength(contour, True)
        approx = cv2.approxPolyDP(contour, 0.04 * perimeter, True)
        if area > 5000 and len(approx) == 3:
            x, y, w, h = cv2.boundingRect(contour)
            cv2.drawContours(frame, [contour], -1, (0, 0, 255), 2)
            print("Red area coordinates: x=", x, "y=", y)
            
    for contour in contours1:
        area = cv2.contourArea(contour)
        corners = cv2.approxPolyDP(contour, 0.01 * cv2.arcLength(contour, True), True)
        if area > 5000 and len(corners) > 7:
            (x, y), radius = cv2.minEnclosingCircle(contour)
            center = (int(x), int(y))
            radius = int(radius)
            x = int(x)
            y = int(y)
            cv2.circle(frame, center, radius, (0, 255, 0), 2)
            print("Green area coordinates: x=", x, "y=", y)
            
    # Hasil
    cv2.imshow('areas', frame)

    # Quit
    if cv2.waitKey(1) == ord('q'):
        break

# Hapus Windows
cap.release()
cv2.destroyAllWindows()